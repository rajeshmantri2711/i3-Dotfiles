#!/usr/bin/env bash
rofi_command="rofi -theme $HOME/.config/rofi/config/powermenu.rasi"

# Get uptime in a more readable format
uptime=$(uptime -p | sed -e 's/up //g')

# If uptime is empty, get it differently
if [[ -z "$uptime" ]]; then
    uptime=$(uptime | awk '{print $3,$4}' | sed 's/,//')
fi

# Options
if [[ "$DIR" == "powermenus" ]]; then
	ddir="$HOME/.config/rofi/config"
else
# Buttons
layout=`cat $HOME/.config/rofi/config/powermenu.rasi | grep BUTTON | cut -d'=' -f2 | tr -d '[:blank:],*/'`
if [[ "$layout" == "TRUE" ]]; then

		shutdown="  Shutdown"
		reboot="  Restart"
		lock="  Lock"
		logout="  Logout"

	fi
	ddir="$HOME/.config/rofi/config"
fi

# Ask for confirmation
rdialog () {
rofi -dmenu\
    -i\
    -no-fixed-num-lines\
    -p "Are You Sure? : "\
    -theme "$ddir/confirm.rasi"
}

# Display Help
show_msg() {
	rofi -theme "$ddir/askpass.rasi" -e "Options : yes / no / y / n"
}

# Variable passed to rofi - show uptime more prominently
options="$shutdown\n$reboot\n$logout\n$lock"

chosen="$(echo -e "$options" | $rofi_command -p "Uptime: $uptime" -dmenu -selected-row 0 -no-custom)"
case $chosen in
    $shutdown)
		ans=$(rdialog &)
		if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]]; then
			systemctl poweroff
		elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]]; then
			exit
        else
			show_msg
        fi
        ;;
    $reboot)
		ans=$(rdialog &)
		if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]]; then
			systemctl reboot
		elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]]; then
			exit
        else
			show_msg
        fi
        ;;
    $lock)
        betterlockscreen -l dimblur
        ;;
    $logout)
			i3-msg exit
        ;;
esac

